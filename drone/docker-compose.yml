version: "3.7"

x-logging:
  &default-logging
  options:
    max-size: '500m'
    max-file: '5'
  driver: json-file

services:
  postgres:
    image: postgres:10
    restart: always
    # https://github.com/docker-library/docs/tree/master/postgres#environment-variables=
    logging: *default-logging
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DRONE_PG_PASS}
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - drone

  drone-server:
    logging: *default-logging
    image: drone/drone:1.6
    # ports:
    #   - 8000:80
    #   - 9000:9000
    networks:
      - drone
      - public
    volumes:
      - drone:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./drone.env
    restart: always
    environment:
      # - DRONE_GITHUB_SKIP_VERIFY=true
      - DRONE_AGENTS_ENABLED=true
      # - DRONE_SERVER_PROTO=https
      - DRONE_TLS_AUTOCERT=false
      - DRONE_OPEN=false
      - DRONE_GITHUB=true
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_DATABASE_DRIVER=postgres
      - DRONE_DATABASE_DATASOURCE=postgres://postgres:${DRONE_PG_PASS}@postgres:5432/postgres?sslmode=disable # TODO
    labels:
      traefik.enable: "true"
      traefik.docker.network: "public"
      traefik.backend: "drone"
      traefik.frontend.rule: "Host:drone.ashtonkinslow.com"
      traefik.port: "80"
      traefik.protocol: "http"
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: "public"
        traefik.backend: "drone"
        traefik.frontend.rule: "Host:drone.ashtonkinslow.com"
        traefik.port: "80"
        traefik.protocol: "http"

  drone-agent:
    logging: *default-logging
    image: drone/agent:1.6
    command: agent
    restart: always
    depends_on:
      - drone-server
    ports:
      - 3000:9009
    networks:
      - drone
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./drone.env
    environment:
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_RPC_DUMP_HTTP=true
      - DRONE_RPC_DUMP_HTTP_BODY=true
      - DRONE_RPC_SERVER=http://drone-server:80
      - DRONE_UI_DISABLE=false
      - DRONE_UI_USERNAME=root
      - DRONE_UI_PASSWORD=root
      - DRONE_RUNNER_CAPACITY=10

networks:
  public:
    external: true
  drone:
    name: drone_network

volumes:
  drone:
  postgres:
