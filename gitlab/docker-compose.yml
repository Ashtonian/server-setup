version: '3.7'

x-logging:
  &default-logging
  options:
    max-size: '500m'
    max-file: '5'
  driver: json-file

services:
        # docker run --rm -t -i -v gitlab_runner:/etc/gitlab-runner gitlab/gitlab-runner register

        # This fixes a permissions issue with starting gitlab on a fresh docker install..
        # gitlabperm:
        #   image: gitlab/gitlab-ee:12.4.5-ee.0
        #   logging: *default-logging
        #   command:
        #     - "gitlab"
        #     - "update-permissions"
        #   volumes:
        #     - gitlab_config:/etc/gitlab'
        #     - gitlab_logs:/var/log/gitlab'
        #     - gitlab_data:/var/opt/gitlab

        #   image: tecnativa/docker-socket-proxy // TODO:
        #   logging: *default-logging
        #   networks:
        #     - dockersock
        #   environment:
        #     CONTAINERS: 1
        #     NETWORKS: 1
        #     SERVICES: 1
        #     SWARM: 1
        #     TASKS: 1
        #   volumes:
        #     - "/var/run/docker.sock:/var/run/docker.sock"
        #   deploy:
        #     placement:
        #       constraints: [node.role == manager]

  gitlab:
    image: gitlab/gitlab-ee:12.4.5-ee.0
    restart: always
    container_name: gitlab
    hostname: "gitlab.ashtonkinslow.com"
    logging: *default-logging
    environment:
      - TZ=America/Chicago
      - VIRTUAL_HOST=gitlab.ashtonkinslow.com
      - VIRTUAL_PORT=80
      # - LETSENCRYPT_HOST=gitlab.ashtonkinslow.com,${REGISTRY_HOST}
      # - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    # ports:
    #   - 80:80
      # - ${GITLAB_SSH_IP}:${GITLAB_SSH_PORT}:22
    expose:
      - 443/tcp
      - 80/tcp
    volumes:
      - gitlab_config:/etc/gitlab'
      - gitlab_logs:/var/log/gitlab'
      - gitlab_data:/var/opt/gitlab
    depends_on:
      - redis
      - postgres
    networks:
      - internal_network
      - public
    labels:
      traefik.enable: "true"
      traefik.docker.network: "public"
      traefik.backend: "gitlab"
      traefik.frontend.rule: "Host:gitlab.ashtonkinslow.com"
      traefik.port: "80"
      traefik.protocol: "http"
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: "public"
        traefik.backend: "gitlab"
        traefik.frontend.rule: "Host:gitlab.ashtonkinslow.com"
        traefik.port: "80"
        traefik.protocol: "http"

  pages:
    image: gitlab/gitlab-ee:12.4.5-ee.0
    restart: always
    container_name: gitlab_pages
    hostname: pages.ashtonkinslow.com
    logging: *default-logging
    environment:
      - TZ=America/Chicago
      - VIRTUAL_HOST=pages.ashtonkinslow.com,*.pages.ashtonkinslow.com
      - VIRTUAL_PORT=8090
      - HTTPS_METHOD=nohttps
      # - LETSENCRYPT_HOST=${PAGES_HOST}
      # - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    expose:
      - 8090/tcp
    entrypoint:
      - /opt/gitlab/embedded/bin/gitlab-pages
    command:
      - -listen-proxy
      - "0.0.0.0:8090"
      - -pages-domain
      - pages.ashtonkinslow.com
      - -pages-root
      - "/var/opt/gitlab/gitlab-rails/shared/pages"
    volumes:
      - gitlab_pages:/var/opt/gitlab/gitlab-pages:rw'
      # - './volumes/data/gitlab-rails/shared/pages:/var/opt/gitlab/gitlab-rails/shared/pages:ro'
      - gitlab_data:/var/opt/gitlab
    networks:
      - internal_network
      - public
    labels:
      traefik.enable: "true"
      traefik.docker.network: "public"
      traefik.backend: "pages"
      traefik.frontend.rule: "Host:pages.ashtonkinslow.com"
      traefik.port: "8090"
      traefik.protocol: "http"
    deploy:
      labels:
        traefik.enable: "true"
        traefik.docker.network: "public"
        traefik.backend: "pages"
        traefik.frontend.rule: "Host:pages.ashtonkinslow.com"
        traefik.port: "8090"
        traefik.protocol: "http"

  runner:
    image: gitlab/gitlab-runner:v12.5.0
    restart: always
    container_name: gitlab_runner
    logging: *default-logging
    environment:
      - CI_SERVER_URL=https://gitlab.ashtonkinslow.com/
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - gitlab-runner:/etc/gitlab-runner
    deploy:
      mode: replicated
      replicas: 1

  postgres:
    image: postgres:10
    restart: always
    container_name: gitlab_postgresql
    # https://github.com/docker-library/docs/tree/master/postgres#environment-variables=
    logging: *default-logging
    environment:

      - POSTGRES_DB=gitlabhq_production
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: always
    networks:
      - internal_network

  redis:
    image: redis:5
    restart: always
    container_name: gitlab_redis
    logging: *default-logging
    command:
      - --loglevel warning
    volumes:
      - redis:/var/lib/redis
    restart: always
    networks:
      - internal_network

networks:
  public:
    external: true
  internal_network:
    internal: true

volumes:
  postgres:
  redis:
  gitlab_data:
  gitlab_logs:
  gitlab_pages:
  gitlab_config:
  gitlab_runner:
